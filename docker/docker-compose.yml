version: "3.1"
services:
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    mem_limit: 700m
    ports:
      - "9411:9411"

  configserver:
    image: ${CONFIG_SERVER_IMAGE}
    container_name: configserver
    mem_limit: 700m
    ports:
      - "8082:8081"
    depends_on:
      - zipkin
    environment:
      SERVER_PORT: 8081
      SPRING_ZIPKIN_BASEURL: http://zipkin:9411/

  eurekaserver:
    image: ${EUREKA_SERVER_IMAGE}
    container_name: eurekaserver
    mem_limit: 700m
    ports:
      - "8070:8070"
    depends_on:
      - configserver
      - zipkin
    deploy:
      restart_policy:
        condition: on-failure
        delay: 25s
        max_attempts: 3
        window: 120s
    environment:
      SPRING_CONFIG_IMPORT: configserver:http://configserver:8081/
      SPRING_ZIPKIN_BASEURL: http://zipkin:9411/


  dci18n:
    image: ${I18N_IMAGE}
    container_name: dci18n
    ports:
      - "9100:8080"
    environment:
      - SPRING_DATASOURCE_URL=${I18N_DATABASE_URL}
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USER}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
    deploy:
      resources:
        limits:
          memory: 800M
        reservations:
          memory: 500M

  accounts:
    image: ${ACCOUNTS_IMAGE}
    container_name: accounts
    mem_limit: 700m
    depends_on:
      - configserver
      - eurekaserver
    extends:
      file: deploy-area.yml
      service: deploy_area
    ports:
      - "9082:9082"
      - "5005:5005"
    environment:
      - DEBUG_ENABLED=true
  #accounts1:
  #  image: ${ACCOUNTS_IMAGE}
  #  container_name: accounts1
  #  mem_limit: 700m
  #  depends_on:
      - configserver
      - eurekaserver
  #  extends:
  #    file: deploy-area.yml
  #    service: deploy_area
  #  ports:
  #    - "9087:9082"


  loans:
    image: ${LOANS_IMAGE}
    container_name: loans
    mem_limit: 700m
    ports:
      - "8097:8090"
    depends_on:
      - configserver
      - eurekaserver
    extends:
      file: deploy-area.yml
      service: deploy_area

  cards:
    image: ${CARDS_IMAGE}
    container_name: cards
    mem_limit: 700m
    ports:
      - "9010:9000"
    depends_on:
      - configserver
      - eurekaserver
    extends:
      file: deploy-area.yml
      service: deploy_area

  api_gateway:
    image: ${APIGATEWAY_IMAGE}
    container_name: api_gateway
    mem_limit: 700m
    ports:
      - "8099:8099"
      - "5006:5005"
    depends_on:
      - configserver
      - eurekaserver
      - accounts
      - loans
      - cards
      - dci18n
      - keycloak_server
      - zipkin
    deploy:
      restart_policy:
        condition: on-failure
        delay: 45s
        max_attempts: 3
        window: 180s
    environment:
      - SERVER_PORT=8099
      - SPRING_PROFILES_ACTIVE=${DEPLOY_ENVIRONMENT}
      - SPRING_CONFIG_IMPORT=configserver:http://configserver:8081/
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eurekaserver:8761/eureka/
      - I18N_URL=http://dci18n:8080/
      - DEBUG_ENABLED=true
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI=http://keycloak_server:7080/realms/diamon-bank/protocol/openid-connect/certs
      - SPRING_ZIPKIN_BASEURL=http://zipkin:9411/

  rabbit_server:
    image: docker.io/bitnami/rabbitmq:3.9
    container_name: rabbit_server
    ports:
      #- '4369:4369'
      #- '5551:5551'
      #- '5552:5552'
      - '5674:5672' #for communication
      #- '25672:25672'
      - '15673:15672' #for ui
    environment:
      - RABBITMQ_USERNAME=username
      - RABBITMQ_PASSWORD=password
    volumes:
      - 'rabbitmq_bank_data:/bitnami'

  prometheus-server:
    image: prom/prometheus:latest
    container_name: prometheus-server
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana-server:
    image: grafana/grafana:latest
    container_name: grafana-server
    ports:
      - "3010:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=password
    depends_on:
      - prometheus-server

  keycloak_server:
    image: quay.io/keycloak/keycloak:22.0.0
    container_name:  keycloak_server
    command: start-dev --http-port=7080
    ports:
      - "7080:7080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
    #volumes:
    #  - '/home/wllopez/dev/tools/keycloak-data/:/opt/keycloak/data/h2'


volumes:
  rabbitmq_bank_data:
    driver: local

