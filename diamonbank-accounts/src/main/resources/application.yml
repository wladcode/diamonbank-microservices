server:
    port: 9082

endpoints:
    shutdown:
        enabled: true
eureka:
    client:
        fetch-registry: true
        register-with-eureka: true
        serviceUrl:
            defaultZone: http://localhost:8070/eureka/
    instance:
        instance-id: '${spring.application.name}:${random.uuid}:${server.port}'
        prefer-ip-address: false
        hostname: localhost
feign:
    circuitbreaker:
        enabled: true
        alphanumeric-ids:
            enabled: true
    client:
        config:
            default:
                connect-timeout: 5000
                read-timeout: 5000
                logger-level: full
    httpclient:
        enabled: true
        max-connections: 200
        max-connections-per-route: 50
    compression:
        request:
            enabled: true
        response:
            enabled: true
i18n:
    url: http://localhost:8080/
info:
    application:
        description: '@description@'
        environment: ${spring.profiles.active}
        name: '@name@'
        version: '@version@'
management:
    endpoint:
        shutdown:
            enabled: true
    endpoints:
        web:
            exposure:
                include: '*'
    info:
        env:
            enabled: true
resilience4j:
    circuitbreaker:
        configs:
            default:
                register-health-indicator: true
                sliding-window-size: 10
                sliding-window-type: COUNT_BASED
                minimum-number-of-calls: 5
                permitted-number-of-calls-in-half-open-state: 3
                wait-duration-in-open-state: 10s
                failure-rate-threshold: 50
        instances:
            loans:
                base-config: default
                wait-duration-in-open-state: 30s
                failure-rate-threshold: 70
            cards:
                base-config: default
                wait-duration-in-open-state: 30s
                failure-rate-threshold: 70
    ratelimiter:
        configs:
            default:
                registerHealthIndicator: true
        instances:
            rateLimiterConsolidate:
                limitForPeriod: 1
                limitRefreshPeriod: 5000
                timeoutDuration: 5000
    retry:
        configs:
            default:
                registerHealthIndicator: true
        instances:
            retryCosolidation:
                maxRetryAttempts: 3
                waitDuration: 2000

spring:
    application:
        name: accounts
    config:
        import: optional:configserver:http://localhost:8071/

    datasource:
        url: jdbc:postgresql://localhost:5432/accounts
        username: postgres
        password: Pos1gre2023
        driver-class-name: org.postgresql.Driver
    jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        show-sql: true
        properties:
            hibernate:
                format_sql: true
                default_schema: public
        hibernate:
            ddl-auto: none
    profiles:
        active: dev
    rabbitmq:
        host: localhost
        password: password
        port: 5672
        username: username
    sleuth:
        sampler:
            probability: 1
    zipkin:
        baseUrl: http://localhost:9411/
        rabbitmq:
            queue: from-zipkin
        sender:
            type: rabbit
    #########################################################
    #Properties for OAUTH2
    #########################################################
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:7080/realms/wladecodeusers
                    jwk-set-uri: http://localhost:7080/realms/wladecodeusers/protocol/openid-connect/certs

#Logging
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2.client: DEBUG
    org.springframework.security.oauth2.core: DEBUG
    org.springframework.security.web.authentication.preauth: DEBUG