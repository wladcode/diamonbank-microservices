endpoints:
    shutdown:
        enabled: true
eureka:
    client:
        fetch-registry: true
        register-with-eureka: true
        serviceUrl:
            defaultZone: http://localhost:8070/eureka/
    instance:
        instance-id: ${spring.application.name}:${instanceId:${random.value}}
        prefer-ip-address: false
        hostname: localhost
feign:
    circuitbreaker:
        alphanumeric-ids:
            enabled: true
        enabled: true
        group:
            enabled: true
    client:
        config:
            httpBinClient:
                connect-timeout: 1000
                read-timeout: 2000
i18n:
    url: http://localhost:8080/
info:
    application:
        description: '@description@'
        environment: ${spring.profiles.active}
        name: '@name@'
        version: '@version@'
management:
    endpoint:
        shutdown:
            enabled: true
    endpoints:
        web:
            exposure:
                include: '*'
    info:
        env:
            enabled: true
resilience4j:
    circuitbreaker:
        configs:
            default:
                register-health-indicator: true
        instances:
            HttpBinClientgetBinWithDelayInSecondsint:
                failure-rate-threshold: 50
                minimum-number-of-calls: 5
                permitted-number-of-calls-in-half-open-state: 2
                wait-duration-in-open-state: 3000
    ratelimiter:
        configs:
            default:
                registerHealthIndicator: true
        instances:
            rateLimiterConsolidate:
                limitForPeriod: 1
                limitRefreshPeriod: 5000
                timeoutDuration: 5000
    retry:
        configs:
            default:
                registerHealthIndicator: true
        instances:
            retryCosolidation:
                maxRetryAttempts: 3
                waitDuration: 2000
server:
    port: ${PORT:0}
spring:
    application:
        name: accounts
    config:
        import: optional:configserver:http://localhost:8071/

    datasource:
        driver-class-name: org.h2.Driver
        password: ''
        url: jdbc:h2:mem:testdb
        username: sa
    h2:
        console:
            enabled: true
    jpa:
        database-platform: org.hibernate.dialect.H2Dialect
        hibernate:
            ddl-auto: none
    profiles:
        active: dev
    rabbitmq:
        host: localhost
        password: password
        port: 5672
        username: username
    sleuth:
        sampler:
            probability: 1
    zipkin:
        baseUrl: http://localhost:9411/
        rabbitmq:
            queue: from-zipkin
        sender:
            type: rabbit
    #########################################################
    #Properties for OAUTH2
    #########################################################
    security:
        oauth2:
            resourceserver:
                jwt:
                    issuer-uri: http://localhost:7080/realms/wladecodeusers
                    jwk-set-uri: http://localhost:7080/realms/wladecodeusers/protocol/openid-connect/certs
